#include <Drawable.h>

static const int tore_nbpoints = 110;
static const double tore_points[110][3] =
{
{ 999., 0., 0. },
{ 966., 91., 0. },
{ 808., 0., -591. },
{ 775., 91., -566. },
{ 883., 158., 0. },
{ 708., 158., -516. },
{ 775., 158., 0. },
{ 625., 158., -458. },
{ 691., 91., 0. },
{ 558., 91., -408. },
{ 666., 0., 0. },
{ 533., 0., -391. },
{ 691., -100., 0. },
{ 558., -100., -408. },
{ 775., -158., 0. },
{ 625., -158., -458. },
{ 883., -158., 0. },
{ 708., -158., -516. },
{ 966., -100., 0. },
{ 775., -100., -566. },
{ 991., 0., 0. },
{ 800., 0., -583. },
{ 308., 0., -949. },
{ 291., 91., -916. },
{ 266., 158., -841. },
{ 233., 158., -741. },
{ 208., 91., -658. },
{ 200., 0., -633. },
{ 208., -100., -658. },
{ 233., -158., -741. },
{ 266., -158., -841. },
{ 291., -100., -916. },
{ 300., 0., -949. },
{ -308., 0., -949. },
{ -300., 91., -916. },
{ -275., 158., -841. },
{ -241., 158., -741. },
{ -216., 91., -658. },
{ -208., 0., -633. },
{ -216., -100., -658. },
{ -241., -158., -741. },
{ -275., -158., -841. },
{ -300., -100., -916. },
{ -308., 0., -949. },
{ -808., 0., -591. },
{ -783., 91., -566. },
{ -716., 158., -516. },
{ -633., 158., -458. },
{ -566., 91., -408. },
{ -541., 0., -391. },
{ -566., -100., -408. },
{ -633., -158., -458. },
{ -716., -158., -516. },
{ -783., -100., -566. },
{ -808., 0., -583. },
{ -999., 0., 0. },
{ -966., 91., 0. },
{ -883., 158., 0. },
{ -775., 158., 0. },
{ -691., 91., 0. },
{ -666., 0., 0. },
{ -691., -100., 0. },
{ -775., -158., 0. },
{ -883., -158., 0. },
{ -966., -100., 0. },
{ -991., 0., 0. },
{ -808., 0., 583. },
{ -783., 91., 566. },
{ -716., 158., 516. },
{ -633., 158., 449. },
{ -566., 91., 408. },
{ -541., 0., 391. },
{ -566., -100., 408. },
{ -633., -158., 449. },
{ -716., -158., 516. },
{ -783., -100., 566. },
{ -808., 0., 583. },
{ -308., 0., 949. },
{ -300., 91., 916. },
{ -275., 158., 833. },
{ -241., 158., 733. },
{ -216., 91., 658. },
{ -208., 0., 633. },
{ -216., -100., 658. },
{ -241., -158., 733. },
{ -275., -158., 833. },
{ -300., -100., 916. },
{ -308., 0., 941. },
{ 308., 0., 949. },
{ 291., 91., 916. },
{ 266., 158., 833. },
{ 233., 158., 733. },
{ 208., 91., 658. },
{ 200., 0., 633. },
{ 208., -100., 658. },
{ 233., -158., 733. },
{ 266., -158., 833. },
{ 291., -100., 916. },
{ 300., 0., 941. },
{ 808., 0., 583. },
{ 775., 91., 566. },
{ 708., 158., 516. },
{ 625., 158., 449. },
{ 558., 91., 408. },
{ 533., 0., 391. },
{ 558., -100., 408. },
{ 625., -158., 449. },
{ 708., -158., 516. },
{ 775., -100., 566. },
{ 800., 0., 583. } };
static const int tore_nbfaces = 200;
static const int tore_faces[200][3] =
{
{ 0, 1, 2 },
{ 2, 3, 1 },
{ 1, 4, 3 },
{ 3, 5, 4 },
{ 4, 6, 5 },
{ 5, 7, 6 },
{ 6, 8, 7 },
{ 7, 9, 8 },
{ 8, 10, 9 },
{ 9, 11, 10 },
{ 10, 12, 11 },
{ 11, 13, 12 },
{ 12, 14, 13 },
{ 13, 15, 14 },
{ 14, 16, 15 },
{ 15, 17, 16 },
{ 16, 18, 17 },
{ 17, 19, 18 },
{ 18, 20, 19 },
{ 19, 21, 20 },
{ 2, 3, 22 },
{ 22, 23, 3 },
{ 3, 5, 23 },
{ 23, 24, 5 },
{ 5, 7, 24 },
{ 24, 25, 7 },
{ 7, 9, 25 },
{ 25, 26, 9 },
{ 9, 11, 26 },
{ 26, 27, 11 },
{ 11, 13, 27 },
{ 27, 28, 13 },
{ 13, 15, 28 },
{ 28, 29, 15 },
{ 15, 17, 29 },
{ 29, 30, 17 },
{ 17, 19, 30 },
{ 30, 31, 19 },
{ 19, 21, 31 },
{ 31, 32, 21 },
{ 22, 23, 33 },
{ 33, 34, 23 },
{ 23, 24, 34 },
{ 34, 35, 24 },
{ 24, 25, 35 },
{ 35, 36, 25 },
{ 25, 26, 36 },
{ 36, 37, 26 },
{ 26, 27, 37 },
{ 37, 38, 27 },
{ 27, 28, 38 },
{ 38, 39, 28 },
{ 28, 29, 39 },
{ 39, 40, 29 },
{ 29, 30, 40 },
{ 40, 41, 30 },
{ 30, 31, 41 },
{ 41, 42, 31 },
{ 31, 32, 42 },
{ 42, 43, 32 },
{ 33, 34, 44 },
{ 44, 45, 34 },
{ 34, 35, 45 },
{ 45, 46, 35 },
{ 35, 36, 46 },
{ 46, 47, 36 },
{ 36, 37, 47 },
{ 47, 48, 37 },
{ 37, 38, 48 },
{ 48, 49, 38 },
{ 38, 39, 49 },
{ 49, 50, 39 },
{ 39, 40, 50 },
{ 50, 51, 40 },
{ 40, 41, 51 },
{ 51, 52, 41 },
{ 41, 42, 52 },
{ 52, 53, 42 },
{ 42, 43, 53 },
{ 53, 54, 43 },
{ 44, 45, 55 },
{ 55, 56, 45 },
{ 45, 46, 56 },
{ 56, 57, 46 },
{ 46, 47, 57 },
{ 57, 58, 47 },
{ 47, 48, 58 },
{ 58, 59, 48 },
{ 48, 49, 59 },
{ 59, 60, 49 },
{ 49, 50, 60 },
{ 60, 61, 50 },
{ 50, 51, 61 },
{ 61, 62, 51 },
{ 51, 52, 62 },
{ 62, 63, 52 },
{ 52, 53, 63 },
{ 63, 64, 53 },
{ 53, 54, 64 },
{ 64, 65, 54 },
{ 55, 56, 66 },
{ 66, 67, 56 },
{ 56, 57, 67 },
{ 67, 68, 57 },
{ 57, 58, 68 },
{ 68, 69, 58 },
{ 58, 59, 69 },
{ 69, 70, 59 },
{ 59, 60, 70 },
{ 70, 71, 60 },
{ 60, 61, 71 },
{ 71, 72, 61 },
{ 61, 62, 72 },
{ 72, 73, 62 },
{ 62, 63, 73 },
{ 73, 74, 63 },
{ 63, 64, 74 },
{ 74, 75, 64 },
{ 64, 65, 75 },
{ 75, 76, 65 },
{ 66, 67, 77 },
{ 77, 78, 67 },
{ 67, 68, 78 },
{ 78, 79, 68 },
{ 68, 69, 79 },
{ 79, 80, 69 },
{ 69, 70, 80 },
{ 80, 81, 70 },
{ 70, 71, 81 },
{ 81, 82, 71 },
{ 71, 72, 82 },
{ 82, 83, 72 },
{ 72, 73, 83 },
{ 83, 84, 73 },
{ 73, 74, 84 },
{ 84, 85, 74 },
{ 74, 75, 85 },
{ 85, 86, 75 },
{ 75, 76, 86 },
{ 86, 87, 76 },
{ 77, 78, 88 },
{ 88, 89, 78 },
{ 78, 79, 89 },
{ 89, 90, 79 },
{ 79, 80, 90 },
{ 90, 91, 80 },
{ 80, 81, 91 },
{ 91, 92, 81 },
{ 81, 82, 92 },
{ 92, 93, 82 },
{ 82, 83, 93 },
{ 93, 94, 83 },
{ 83, 84, 94 },
{ 94, 95, 84 },
{ 84, 85, 95 },
{ 95, 96, 85 },
{ 85, 86, 96 },
{ 96, 97, 86 },
{ 86, 87, 97 },
{ 97, 98, 87 },
{ 88, 89, 99 },
{ 99, 100, 89 },
{ 89, 90, 100 },
{ 100, 101, 90 },
{ 90, 91, 101 },
{ 101, 102, 91 },
{ 91, 92, 102 },
{ 102, 103, 92 },
{ 92, 93, 103 },
{ 103, 104, 93 },
{ 93, 94, 104 },
{ 104, 105, 94 },
{ 94, 95, 105 },
{ 105, 106, 95 },
{ 95, 96, 106 },
{ 106, 107, 96 },
{ 96, 97, 107 },
{ 107, 108, 97 },
{ 97, 98, 108 },
{ 108, 109, 98 },
{ 99, 100, 0 },
{ 0, 1, 100 },
{ 100, 101, 1 },
{ 1, 4, 101 },
{ 101, 102, 4 },
{ 4, 6, 102 },
{ 102, 103, 6 },
{ 6, 8, 103 },
{ 103, 104, 8 },
{ 8, 10, 104 },
{ 104, 105, 10 },
{ 10, 12, 105 },
{ 105, 106, 12 },
{ 12, 14, 106 },
{ 106, 107, 14 },
{ 14, 16, 107 },
{ 107, 108, 16 },
{ 16, 18, 108 },
{ 108, 109, 18 },
{ 18, 20, 109 } };
static const int tore_nbfaceColors = 200;
static const unsigned char tore_faceColors[200][3] =
{
{ 252, 255, 255 },
{ 252, 252, 255 },
{ 252, 252, 253 },
{ 249, 252, 253 },
{ 249, 249, 253 },
{ 249, 249, 251 },
{ 246, 249, 251 },
{ 246, 246, 251 },
{ 246, 246, 249 },
{ 243, 246, 249 },
{ 243, 243, 249 },
{ 243, 243, 247 },
{ 240, 243, 247 },
{ 240, 240, 247 },
{ 240, 240, 245 },
{ 237, 240, 245 },
{ 237, 237, 245 },
{ 237, 237, 243 },
{ 234, 237, 243 },
{ 234, 234, 243 },
{ 234, 234, 241 },
{ 231, 234, 241 },
{ 231, 231, 241 },
{ 231, 231, 239 },
{ 228, 231, 239 },
{ 228, 228, 239 },
{ 228, 228, 237 },
{ 225, 228, 237 },
{ 225, 225, 237 },
{ 225, 225, 235 },
{ 222, 225, 235 },
{ 222, 222, 235 },
{ 222, 222, 233 },
{ 219, 222, 233 },
{ 219, 219, 233 },
{ 219, 219, 231 },
{ 216, 219, 231 },
{ 216, 216, 231 },
{ 216, 216, 229 },
{ 213, 216, 229 },
{ 213, 213, 229 },
{ 213, 213, 227 },
{ 210, 213, 227 },
{ 210, 210, 227 },
{ 210, 210, 225 },
{ 207, 210, 225 },
{ 207, 207, 225 },
{ 207, 207, 223 },
{ 204, 207, 223 },
{ 204, 204, 223 },
{ 204, 204, 221 },
{ 201, 204, 221 },
{ 201, 201, 221 },
{ 201, 201, 219 },
{ 198, 201, 219 },
{ 198, 198, 219 },
{ 198, 198, 217 },
{ 195, 198, 217 },
{ 195, 195, 217 },
{ 195, 195, 215 },
{ 192, 195, 215 },
{ 192, 192, 215 },
{ 192, 192, 213 },
{ 189, 192, 213 },
{ 189, 189, 213 },
{ 189, 189, 211 },
{ 186, 189, 211 },
{ 186, 186, 211 },
{ 186, 186, 209 },
{ 183, 186, 209 },
{ 183, 183, 209 },
{ 183, 183, 207 },
{ 180, 183, 207 },
{ 180, 180, 207 },
{ 180, 180, 205 },
{ 177, 180, 205 },
{ 177, 177, 205 },
{ 177, 177, 203 },
{ 174, 177, 203 },
{ 174, 174, 203 },
{ 174, 174, 201 },
{ 171, 174, 201 },
{ 171, 171, 201 },
{ 171, 171, 199 },
{ 168, 171, 199 },
{ 168, 168, 199 },
{ 168, 168, 197 },
{ 165, 168, 197 },
{ 165, 165, 197 },
{ 165, 165, 195 },
{ 162, 165, 195 },
{ 162, 162, 195 },
{ 162, 162, 193 },
{ 159, 162, 193 },
{ 159, 159, 193 },
{ 159, 159, 191 },
{ 156, 159, 191 },
{ 156, 156, 191 },
{ 156, 156, 189 },
{ 153, 156, 189 },
{ 153, 153, 189 },
{ 153, 153, 187 },
{ 150, 153, 187 },
{ 150, 150, 187 },
{ 150, 150, 185 },
{ 147, 150, 185 },
{ 147, 147, 185 },
{ 147, 147, 183 },
{ 144, 147, 183 },
{ 144, 144, 183 },
{ 144, 144, 181 },
{ 141, 144, 181 },
{ 141, 141, 181 },
{ 141, 141, 179 },
{ 138, 141, 179 },
{ 138, 138, 179 },
{ 138, 138, 177 },
{ 135, 138, 177 },
{ 135, 135, 177 },
{ 135, 135, 175 },
{ 132, 135, 175 },
{ 132, 132, 175 },
{ 132, 132, 173 },
{ 129, 132, 173 },
{ 129, 129, 173 },
{ 129, 129, 171 },
{ 126, 129, 171 },
{ 126, 126, 171 },
{ 126, 126, 169 },
{ 123, 126, 169 },
{ 123, 123, 169 },
{ 123, 123, 167 },
{ 120, 123, 167 },
{ 120, 120, 167 },
{ 120, 120, 165 },
{ 117, 120, 165 },
{ 117, 117, 165 },
{ 117, 117, 163 },
{ 114, 117, 163 },
{ 114, 114, 163 },
{ 114, 114, 161 },
{ 111, 114, 161 },
{ 111, 111, 161 },
{ 111, 111, 159 },
{ 108, 111, 159 },
{ 108, 108, 159 },
{ 108, 108, 157 },
{ 105, 108, 157 },
{ 105, 105, 157 },
{ 105, 105, 155 },
{ 102, 105, 155 },
{ 102, 102, 155 },
{ 102, 102, 153 },
{ 99, 102, 153 },
{ 99, 99, 153 },
{ 99, 99, 151 },
{ 96, 99, 151 },
{ 96, 96, 151 },
{ 96, 96, 149 },
{ 93, 96, 149 },
{ 93, 93, 149 },
{ 93, 93, 147 },
{ 90, 93, 147 },
{ 90, 90, 147 },
{ 90, 90, 145 },
{ 87, 90, 145 },
{ 87, 87, 145 },
{ 87, 87, 143 },
{ 84, 87, 143 },
{ 84, 84, 143 },
{ 84, 84, 141 },
{ 81, 84, 141 },
{ 81, 81, 141 },
{ 81, 81, 139 },
{ 78, 81, 139 },
{ 78, 78, 139 },
{ 78, 78, 137 },
{ 75, 78, 137 },
{ 75, 75, 137 },
{ 75, 75, 135 },
{ 72, 75, 135 },
{ 72, 72, 135 },
{ 72, 72, 133 },
{ 69, 72, 133 },
{ 69, 69, 133 },
{ 69, 69, 131 },
{ 66, 69, 131 },
{ 66, 66, 131 },
{ 66, 66, 129 },
{ 63, 66, 129 },
{ 63, 63, 129 },
{ 63, 63, 127 },
{ 60, 63, 127 },
{ 60, 60, 127 },
{ 60, 60, 125 },
{ 57, 60, 125 },
{ 57, 57, 125 },
{ 57, 57, 123 },
{ 54, 57, 123 },
{ 54, 54, 123 } };

void Drawable::LoadPredefinedTore()
{
  int i;

  colorOnFace = true;
  points.Clear();
  pointColors.Clear();
  faces.Clear();
  faceColors.Clear();
  for (i = 0; i < tore_nbpoints; ++i )
    points.PushBack(Coord3D(tore_points[i][0], tore_points[i][1],
        tore_points[i][2]) );
  for (i = 0; i < tore_nbfaces; ++i )
    faces.PushBack(Face(tore_faces[i][0], tore_faces[i][1],
        tore_faces[i][2]) );
  for (i = 0; i < tore_nbfaceColors; ++i )
    faceColors.PushBack(Color(tore_faceColors[i][0], tore_faceColors[i][1],
        tore_faceColors[i][2]) );

  CenterObjectToOrigin();

  for (i = 0; i < points.size; ++i )
    pointColors.PushBack(Color((unsigned char)(rand() % 256), (unsigned char)(rand() % 256), (unsigned char)(rand() % 256)) );
}
